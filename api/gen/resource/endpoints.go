// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resource endpoints
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resource

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "resource" service endpoints.
type Endpoints struct {
	AllResources goa.Endpoint
}

// NewEndpoints wraps the methods of the "resource" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		AllResources: NewAllResourcesEndpoint(s),
	}
}

// Use applies the given middleware to all the "resource" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.AllResources = m(e.AllResources)
}

// NewAllResourcesEndpoint returns an endpoint function that calls the method
// "AllResources" of service "resource".
func NewAllResourcesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*AllResourcesPayload)
		res, err := s.AllResources(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedResourceCollection(res, "extended")
		return vres, nil
	}
}
